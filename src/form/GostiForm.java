/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form;

import communication.Operacija;
import communication.Zahtev;
import domain.Gost;
import form.model.GostTableModel;
import form.model.SobaTableModel;
import form.thread.GuestThread;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import logic.FormaKontroler;
import logic.Kontroler;

/**
 *
 * @author Korisnik
 */
public class GostiForm extends javax.swing.JDialog {

    
     GuestThread nit = new GuestThread();
     private String lastFilterCriteria = null;
    private int lastResultCount = -1;
    private Timer messageTimer;
    private final int MESSAGE_DELAY = 3000;
    private volatile boolean isFilteringActive = false;
    /**
     * Creates new form GostiForm
     */
    public GostiForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        FormaKontroler.getInstance().setGforma(this);
        nit.setForma(this);
        nit.start();
        addDocumentListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtKontakt = new javax.swing.JTextField();
        txtPopust = new javax.swing.JTextField();
        btnKreiraj = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGosti = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnPrikazi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnKreiraj.setText("Kreiraj gosta");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        tblGosti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblGosti);

        jLabel3.setText("Kontakt:");

        btnPrikazi.setText("Prika≈æi gosta");
        btnPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziActionPerformed(evt);
            }
        });

        jLabel4.setText("Popust:");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel5.setText("Filtriraj gosta po imenu:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIme)
                                .addComponent(txtPrezime)
                                .addComponent(txtKontakt)
                                .addComponent(txtPopust, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(51, 51, 51)
                            .addComponent(btnKreiraj))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFilter))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnPrikazi))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrikazi)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtKontakt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPopust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKreiraj)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        try {
            // TODO add your handling code here:
            Gost gost = new Gost();
            gost.setIme(txtIme.getText().trim());
            gost.setPrezime(txtPrezime.getText().trim());
            gost.setKontakt(txtKontakt.getText().trim());
            String popust = txtPopust.getText().trim();
            try {
            double value = Double.parseDouble(popust);  
            gost.setPopust(value);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric value.");
            return;
        }
            Zahtev zahtev = new Zahtev(Operacija.C_GOST, gost);
            Kontroler.getInstance().createObject(zahtev);
        } catch (IOException ex) {
            Logger.getLogger(GostiForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziActionPerformed
        // TODO add your handling code here:
        int pozicija = tblGosti.getSelectedRow();
        if(pozicija==-1){
        JOptionPane.showMessageDialog(null,"Sistem ne mo≈æe da uƒçita gosta. Izaberite polje forme" );
        return;
        }
        GostTableModel tm = (GostTableModel) tblGosti.getModel();
        Gost gost = tm.getGosti().get(pozicija);
        FormaKontroler.getInstance().getGforma().startShowForm(gost);
        JOptionPane.showMessageDialog(null, "Sistem je uƒçitao gosta");

    }//GEN-LAST:event_btnPrikaziActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        nit.stopThread();
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GostiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GostiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GostiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GostiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GostiForm dialog = new GostiForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnPrikazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGosti;
    private javax.swing.JTextField txtFilter;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKontakt;
    private javax.swing.JTextField txtPopust;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

  
    public void populateTable(List<Gost> gosti) {
        GostTableModel tm = new GostTableModel(gosti);
        tblGosti.setModel(tm);
    }

    public void startShowForm(Gost novi) {
         ShowGuest room = new ShowGuest(this, false, novi);
            room.pack();
            room.setLocationRelativeTo(null);
            room.setVisible(true);
    }

    private void addDocumentListeners() {
     txtFilter.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void changedUpdate(DocumentEvent e) {
        runSearch();
    }
    @Override
    public void removeUpdate(DocumentEvent e) {
        runSearch();
    }
    @Override
    public void insertUpdate(DocumentEvent e) {
        runSearch();
    }
     private void runSearch() {
        SwingUtilities.invokeLater(() -> {
            try {
                String searchText = txtFilter.getText().trim();
                Zahtev zahtev = new Zahtev(Operacija.R_GOST, searchText);
                Kontroler.getInstance().createObject(zahtev);
            } catch (IOException ex) {
                Logger.getLogger(GostiForm.class.getName()).log(Level.SEVERE, null, ex);
            }
                
               
               
        });
    }
     });}

    public void updateWithFilter(List<Gost> gosti) {
        isFilteringActive = true;

    GostTableModel tm = new GostTableModel(gosti);
    tblGosti.setModel(tm);
    String currentFilterCriteria = txtFilter.getText().trim();
    int currentResultCount = gosti.size();

    if (messageTimer != null && messageTimer.isRunning()) {
        messageTimer.stop();
    }

    messageTimer = new Timer(MESSAGE_DELAY, e -> {
        if (!currentFilterCriteria.equals(lastFilterCriteria) || currentResultCount != lastResultCount) {
            if (gosti.isEmpty()) {
                JOptionPane.showMessageDialog(tblGosti, "Sistem ne mo≈æe da naƒëe sobe po zadatoj vrednosti.");
            } else {
                JOptionPane.showMessageDialog(tblGosti, "Sistem je na≈°ao sobe po zadatoj vrednosti.");
            }

           
            lastFilterCriteria = currentFilterCriteria;
            lastResultCount = currentResultCount;
        }
       
        isFilteringActive = currentFilterCriteria.isEmpty();
    });
    messageTimer.setRepeats(false);
    messageTimer.start();
    }

    public void showDialogue(Gost gost) {
        if(gost==null){
        
            JOptionPane.showMessageDialog(null, "Sistem ne mo≈æe da kreira gosta. Gre≈°ke u validaciji");
            return;
        }
        
        JOptionPane.showMessageDialog(null, "Sistem je kreirao gosta!");
    }
    public boolean shouldUpdate() {
    return !isFilteringActive;
}
}
